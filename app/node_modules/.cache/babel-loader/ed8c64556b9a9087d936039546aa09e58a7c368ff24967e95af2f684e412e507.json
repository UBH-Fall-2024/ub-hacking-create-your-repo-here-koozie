{"ast":null,"code":"var _jsxFileName = \"/Users/ilyashilov/Documents/projects/ub-hacking-create-your-repo-here-koozie/app/src/components/pages/home/home.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { motion } from 'framer-motion';\n\n// Define default values\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BOX_WIDTH = 200;\nconst BOX_HEIGHT = 200;\n\n// Random position generation for each circle within the bounding box\nfunction generateRandomPositionInBox(circles, size) {\n  let top, left;\n  const attempts = 100; // Limit the number of attempts to avoid infinite loop\n  let validPosition = false;\n  for (let attempt = 0; attempt < attempts; attempt++) {\n    top = Math.floor(Math.random() * (BOX_HEIGHT - size));\n    left = Math.floor(Math.random() * (BOX_WIDTH - size));\n\n    // Check if the new circle position intersects with any existing circles\n    validPosition = !circles.some(circle => {\n      const distX = Math.abs(circle.left - left);\n      const distY = Math.abs(circle.top - top);\n      const combinedRadius = (circle.size + size) / 2;\n      return distX < combinedRadius && distY < combinedRadius;\n    });\n    if (validPosition) break; // Found a valid position\n  }\n  return {\n    top,\n    left\n  };\n}\n\n// Random scale generation for each circle (between 1 and 1.2 for subtle size variations)\nfunction generateRandomScale() {\n  return 1 + Math.random() * 0.5; // Random scale between 1 and 1.5\n}\n\n// Random wiggle values for animation\nfunction generateRandomWiggle() {\n  return Math.random() * 10 - 5; // Random wiggle value between -5 and 5\n}\n\n// Random size for each circle (between 60px and 160px for more spread)\nfunction generateRandomSize() {\n  return Math.floor(Math.random() * (160 - 60 + 1)) + 60; // Random size between 60px and 160px\n}\n\n// Updated random animation duration (between 6 and 10 seconds)\nfunction generateRandomDuration() {\n  return 6 + Math.random() * 4; // Random duration between 6 and 10 seconds\n}\nfunction PulsatingButton({\n  text,\n  name,\n  size,\n  position\n}) {\n  _s();\n  const [scale] = useState(generateRandomScale); // Random scale factor\n  const [duration] = useState(generateRandomDuration); // Random animation duration\n\n  return /*#__PURE__*/_jsxDEV(motion.button, {\n    style: {\n      position: 'absolute',\n      top: position.top,\n      left: position.left,\n      width: size,\n      // Set circle size\n      height: size,\n      // Set circle size\n      borderRadius: '50%',\n      color: 'white',\n      fontSize: '16px',\n      fontWeight: 'bold',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      border: 'none',\n      cursor: 'pointer',\n      outline: 'none'\n    },\n    animate: {\n      scale: [1, scale, 1],\n      // Apply random scale factor in animation (subtle)\n      x: [0, generateRandomWiggle(), generateRandomWiggle(), generateRandomWiggle(), 0],\n      // Random X wiggles\n      y: [0, generateRandomWiggle(), generateRandomWiggle(), generateRandomWiggle(), 0] // Random Y wiggles\n    },\n    transition: {\n      duration: duration,\n      // Apply random duration for animation\n      ease: 'easeInOut',\n      repeat: Infinity,\n      repeatType: 'loop'\n    },\n    className: \"bg-blue-900\",\n    onClick: () => alert(`${name} clicked!`),\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(PulsatingButton, \"Lhn1Pd+dBbu78HXtUlEozqn4NM0=\");\n_c = PulsatingButton;\nconst Hero = () => {\n  _s2();\n  const [circles, setCircles] = useState([]); // Array of circles\n\n  // Randomly determine how many circles per row between 3 and 4\n  const getCirclesPerRow = () => {\n    return Math.floor(Math.random() * (4 - 3 + 1)) + 3; // Random number between 3 and 4\n  };\n\n  // Function to add one more circle to the page\n  const addCircle = () => {\n    const circleName = prompt('Name your group', 'Circle ' + (circles.length + 1));\n    if (circleName) {\n      const randomSize = generateRandomSize();\n      const position = generateRandomPositionInBox(circles, randomSize);\n      setCircles(prevCircles => [...prevCircles, {\n        id: prevCircles.length + 1,\n        name: circleName,\n        size: randomSize,\n        ...position\n      }]);\n    }\n  };\n\n  // Split circles into rows with random circle count per row\n  const getRows = () => {\n    let rows = [];\n    let circlesCopy = [...circles];\n    while (circlesCopy.length > 0) {\n      const circlesInRow = getCirclesPerRow();\n      const rowCircles = circlesCopy.splice(0, circlesInRow);\n      rows.push(rowCircles);\n    }\n    return rows;\n  };\n  const rows = getRows(); // Get the rows with random circle count per row\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    style: {\n      width: '100%',\n      padding: 0,\n      margin: 0\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        width: '100%'\n      },\n      children: rows.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          gap: 20,\n          width: '100%'\n        },\n        children: row.map(circle => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'relative',\n            width: BOX_WIDTH,\n            height: BOX_HEIGHT,\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(PulsatingButton, {\n            text: circle.name,\n            name: circle.name,\n            size: circle.size,\n            position: {\n              top: circle.top,\n              left: circle.left\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 17\n          }, this)\n        }, circle.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 15\n        }, this))\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        marginTop: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addCircle,\n        style: {\n          padding: '10px 20px',\n          fontSize: '16px',\n          backgroundColor: '#3498db',\n          color: 'white',\n          border: 'none',\n          borderRadius: '5px',\n          cursor: 'pointer'\n        },\n        children: \"Add Circle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n};\n_s2(Hero, \"pUOjDlkpS0j6CCR2nrYuQeFKTvU=\");\n_c2 = Hero;\nconst Home = () => {\n  return /*#__PURE__*/_jsxDEV(Hero, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 10\n  }, this);\n};\n_c3 = Home;\nexport default Home;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"PulsatingButton\");\n$RefreshReg$(_c2, \"Hero\");\n$RefreshReg$(_c3, \"Home\");","map":{"version":3,"names":["React","useState","motion","jsxDEV","_jsxDEV","BOX_WIDTH","BOX_HEIGHT","generateRandomPositionInBox","circles","size","top","left","attempts","validPosition","attempt","Math","floor","random","some","circle","distX","abs","distY","combinedRadius","generateRandomScale","generateRandomWiggle","generateRandomSize","generateRandomDuration","PulsatingButton","text","name","position","_s","scale","duration","button","style","width","height","borderRadius","color","fontSize","fontWeight","display","alignItems","justifyContent","border","cursor","outline","animate","x","y","transition","ease","repeat","Infinity","repeatType","className","onClick","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Hero","_s2","setCircles","getCirclesPerRow","addCircle","circleName","prompt","length","randomSize","prevCircles","id","getRows","rows","circlesCopy","circlesInRow","rowCircles","splice","push","padding","margin","flexDirection","map","row","rowIndex","gap","marginTop","backgroundColor","_c2","Home","_c3","$RefreshReg$"],"sources":["/Users/ilyashilov/Documents/projects/ub-hacking-create-your-repo-here-koozie/app/src/components/pages/home/home.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { motion } from 'framer-motion';\n\n// Define default values\nconst BOX_WIDTH = 200;\nconst BOX_HEIGHT = 200;\n\n// Random position generation for each circle within the bounding box\nfunction generateRandomPositionInBox(circles, size) {\n  let top, left;\n  const attempts = 100; // Limit the number of attempts to avoid infinite loop\n  let validPosition = false;\n\n  for (let attempt = 0; attempt < attempts; attempt++) {\n    top = Math.floor(Math.random() * (BOX_HEIGHT - size));\n    left = Math.floor(Math.random() * (BOX_WIDTH - size));\n\n    // Check if the new circle position intersects with any existing circles\n    validPosition = !circles.some(circle => {\n      const distX = Math.abs(circle.left - left);\n      const distY = Math.abs(circle.top - top);\n      const combinedRadius = (circle.size + size) / 2;\n      return distX < combinedRadius && distY < combinedRadius;\n    });\n\n    if (validPosition) break; // Found a valid position\n  }\n\n  return { top, left };\n}\n\n// Random scale generation for each circle (between 1 and 1.2 for subtle size variations)\nfunction generateRandomScale() {\n  return 1 + Math.random() * 0.5; // Random scale between 1 and 1.5\n}\n\n// Random wiggle values for animation\nfunction generateRandomWiggle() {\n  return Math.random() * 10 - 5; // Random wiggle value between -5 and 5\n}\n\n// Random size for each circle (between 60px and 160px for more spread)\nfunction generateRandomSize() {\n  return Math.floor(Math.random() * (160 - 60 + 1)) + 60; // Random size between 60px and 160px\n}\n\n// Updated random animation duration (between 6 and 10 seconds)\nfunction generateRandomDuration() {\n  return 6 + Math.random() * 4; // Random duration between 6 and 10 seconds\n}\n\nfunction PulsatingButton({ text, name, size, position }) {\n  const [scale] = useState(generateRandomScale); // Random scale factor\n  const [duration] = useState(generateRandomDuration); // Random animation duration\n\n  return (\n    <motion.button\n      style={{\n        position: 'absolute',\n        top: position.top,\n        left: position.left,\n        width: size, // Set circle size\n        height: size, // Set circle size\n        borderRadius: '50%',\n        color: 'white',\n        fontSize: '16px',\n        fontWeight: 'bold',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        border: 'none',\n        cursor: 'pointer',\n        outline: 'none',\n      }}\n      animate={{\n        scale: [1, scale, 1], // Apply random scale factor in animation (subtle)\n        x: [0, generateRandomWiggle(), generateRandomWiggle(), generateRandomWiggle(), 0], // Random X wiggles\n        y: [0, generateRandomWiggle(), generateRandomWiggle(), generateRandomWiggle(), 0], // Random Y wiggles\n      }}\n      transition={{\n        duration: duration, // Apply random duration for animation\n        ease: 'easeInOut',\n        repeat: Infinity,\n        repeatType: 'loop',\n      }}\n    \n      \n      className=\"bg-blue-900\"\n      onClick={() => alert(`${name} clicked!`)}\n    >\n      {text}\n    </motion.button>\n  );\n}\n\nconst Hero = () => {\n  const [circles, setCircles] = useState([]); // Array of circles\n\n  // Randomly determine how many circles per row between 3 and 4\n  const getCirclesPerRow = () => {\n    return Math.floor(Math.random() * (4 - 3 + 1)) + 3; // Random number between 3 and 4\n  };\n\n  // Function to add one more circle to the page\n  const addCircle = () => {\n    const circleName = prompt('Name your group', 'Circle ' + (circles.length + 1));\n    if (circleName) {\n      const randomSize = generateRandomSize();\n      const position = generateRandomPositionInBox(circles, randomSize);\n      setCircles(prevCircles => [\n        ...prevCircles,\n        { id: prevCircles.length + 1, name: circleName, size: randomSize, ...position },\n      ]);\n    }\n  };\n\n  // Split circles into rows with random circle count per row\n  const getRows = () => {\n    let rows = [];\n    let circlesCopy = [...circles];\n    while (circlesCopy.length > 0) {\n      const circlesInRow = getCirclesPerRow();\n      const rowCircles = circlesCopy.splice(0, circlesInRow);\n      rows.push(rowCircles);\n    }\n    return rows;\n  };\n\n  const rows = getRows(); // Get the rows with random circle count per row\n\n  return (\n    <section style={{ width: '100%', padding: 0, margin: 0 }}>\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          width: '100%',\n        }}\n      >\n        {/* Create rows of circles */}\n        {rows.map((row, rowIndex) => (\n          <div\n            key={rowIndex}\n            style={{\n              display: 'flex',\n              justifyContent: 'center',\n              gap: 20,\n              width: '100%',\n            }}\n          >\n            {/* Create circles in this row */}\n            {row.map((circle) => (\n              <div\n                key={circle.id}\n                style={{\n                  position: 'relative',\n                  width: BOX_WIDTH,\n                  height: BOX_HEIGHT,\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                }}\n              >\n                <PulsatingButton text={circle.name} name={circle.name} size={circle.size} position={{ top: circle.top, left: circle.left }} />\n              </div>\n            ))}\n          </div>\n        ))}\n      </div>\n\n      <div style={{ display: 'flex', justifyContent: 'center', marginTop: '20px' }}>\n        <button\n          onClick={addCircle}\n          style={{\n            padding: '10px 20px',\n            fontSize: '16px',\n            backgroundColor: '#3498db',\n            color: 'white',\n            border: 'none',\n            borderRadius: '5px',\n            cursor: 'pointer',\n          }}\n        >\n          Add Circle\n        </button>\n      </div>\n    </section>\n  );\n};\n\nconst Home = () => {\n  return <Hero />;\n};\n\nexport default Home;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/ilyashilov/Documents/projects/ub-hacking-create-your-repo-here-koozie/app/src/components/pages/home/home.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { motion } from 'framer-motion';\n\n// Define default values\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BOX_WIDTH = 200;\nconst BOX_HEIGHT = 200;\n\n// Random position generation for each circle within the bounding box\nfunction generateRandomPositionInBox(circles, size) {\n  let top, left;\n  const attempts = 100; // Limit the number of attempts to avoid infinite loop\n  let validPosition = false;\n  for (let attempt = 0; attempt < attempts; attempt++) {\n    top = Math.floor(Math.random() * (BOX_HEIGHT - size));\n    left = Math.floor(Math.random() * (BOX_WIDTH - size));\n\n    // Check if the new circle position intersects with any existing circles\n    validPosition = !circles.some(circle => {\n      const distX = Math.abs(circle.left - left);\n      const distY = Math.abs(circle.top - top);\n      const combinedRadius = (circle.size + size) / 2;\n      return distX < combinedRadius && distY < combinedRadius;\n    });\n    if (validPosition) break; // Found a valid position\n  }\n  return {\n    top,\n    left\n  };\n}\n\n// Random scale generation for each circle (between 1 and 1.2 for subtle size variations)\nfunction generateRandomScale() {\n  return 1 + Math.random() * 0.5; // Random scale between 1 and 1.5\n}\n\n// Random wiggle values for animation\nfunction generateRandomWiggle() {\n  return Math.random() * 10 - 5; // Random wiggle value between -5 and 5\n}\n\n// Random size for each circle (between 60px and 160px for more spread)\nfunction generateRandomSize() {\n  return Math.floor(Math.random() * (160 - 60 + 1)) + 60; // Random size between 60px and 160px\n}\n\n// Updated random animation duration (between 6 and 10 seconds)\nfunction generateRandomDuration() {\n  return 6 + Math.random() * 4; // Random duration between 6 and 10 seconds\n}\nfunction PulsatingButton({\n  text,\n  name,\n  size,\n  position\n}) {\n  _s();\n  const [scale] = useState(generateRandomScale); // Random scale factor\n  const [duration] = useState(generateRandomDuration); // Random animation duration\n\n  return /*#__PURE__*/_jsxDEV(motion.button, {\n    style: {\n      position: 'absolute',\n      top: position.top,\n      left: position.left,\n      width: size,\n      // Set circle size\n      height: size,\n      // Set circle size\n      borderRadius: '50%',\n      backgroundColor: '#1A06D0',\n      // Default background color\n      color: 'white',\n      fontSize: '16px',\n      fontWeight: 'bold',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      border: 'none',\n      cursor: 'pointer',\n      outline: 'none'\n    },\n    animate: {\n      scale: [1, scale, 1],\n      // Apply random scale factor in animation (subtle)\n      x: [0, generateRandomWiggle(), generateRandomWiggle(), generateRandomWiggle(), 0],\n      // Random X wiggles\n      y: [0, generateRandomWiggle(), generateRandomWiggle(), generateRandomWiggle(), 0] // Random Y wiggles\n    },\n    transition: {\n      duration: duration,\n      // Apply random duration for animation\n      ease: 'easeInOut',\n      repeat: Infinity,\n      repeatType: 'loop'\n    },\n    whileHover: {\n      scale: scale + 0.15,\n      // Increase scale on hover\n      transition: {\n        scale: {\n          duration: 0.6,\n          // Slower transition for increase in size\n          ease: 'easeInOut'\n        }\n      }\n    },\n    whileTap: {\n      scale: scale + 0.1,\n      // Slightly smaller scale when tapped (optional)\n      transition: {\n        scale: {\n          duration: 0.3,\n          ease: 'easeOut'\n        } // Smoother scale back after tap\n      }\n    },\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(PulsatingButton, \"Lhn1Pd+dBbu78HXtUlEozqn4NM0=\");\n_c = PulsatingButton;\nconst Hero = () => {\n  _s2();\n  const [circles, setCircles] = useState([]); // Array of circles\n\n  // Function to update the screen width on resize\n  useEffect(() => {\n    const handleResize = () => {\n      setScreenWidth(window.innerWidth);\n    };\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  // Function to add one more circle to the page\n  const addCircle = () => {\n    const circleName = prompt('Name your group', 'Circle ' + (circles.length + 1)); // Default name is Circle X\n    if (circleName) {\n      const randomSize = generateRandomSize(); // Get a random size for this circle\n      setCircles(prevCircles => [...prevCircles, {\n        id: prevCircles.length + 1,\n        name: circleName,\n        size: randomSize\n      }]);\n    }\n  };\n\n  // Function to handle the button click and show the alert\n  const handleButtonClick = () => {\n    alert('Going to the chat');\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    style: {\n      width: '100%',\n      padding: 0,\n      margin: 0\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n        gap: 20,\n        width: '100%'\n      },\n      children: circles.map((circle, index) => {\n        const colSize = getCirclesPerRow(); // Random number of circles per row\n        const position = generateRandomPositionInBox();\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'relative',\n            width: BOX_WIDTH,\n            height: BOX_HEIGHT,\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            margin: 10\n          },\n          children: /*#__PURE__*/_jsxDEV(PulsatingButton, {\n            text: circle.name,\n            name: circle.name,\n            size: circle.size,\n            position: position,\n            isHovered: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 17\n          }, this)\n        }, circle.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        marginTop: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleButtonClick // Handle button click\n        ,\n        style: {\n          padding: '10px 20px',\n          fontSize: '16px',\n          backgroundColor: '#3498db',\n          color: 'white',\n          border: 'none',\n          borderRadius: '5px',\n          cursor: 'pointer'\n        },\n        children: \"Add Circle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 7\n  }, this);\n};\n_s2(Hero, \"lkfElwGI/29Wxu5Mr0YXsH1jqMk=\");\n_c2 = Hero;\nconst Home = () => {\n  return /*#__PURE__*/_jsxDEV(Hero, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 10\n  }, this);\n};\n_c3 = Home;\nexport default Home;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"PulsatingButton\");\n$RefreshReg$(_c2, \"Hero\");\n$RefreshReg$(_c3, \"Home\");","map":{"version":3,"names":["React","useState","motion","jsxDEV","_jsxDEV","BOX_WIDTH","BOX_HEIGHT","generateRandomPositionInBox","circles","size","top","left","attempts","validPosition","attempt","Math","floor","random","some","circle","distX","abs","distY","combinedRadius","generateRandomScale","generateRandomWiggle","generateRandomSize","generateRandomDuration","PulsatingButton","text","name","position","_s","scale","duration","button","style","width","height","borderRadius","backgroundColor","color","fontSize","fontWeight","display","alignItems","justifyContent","border","cursor","outline","animate","x","y","transition","ease","repeat","Infinity","repeatType","whileHover","whileTap","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Hero","_s2","setCircles","useEffect","handleResize","setScreenWidth","window","innerWidth","addEventListener","removeEventListener","addCircle","circleName","prompt","length","randomSize","prevCircles","id","handleButtonClick","alert","padding","margin","flexWrap","gap","map","index","colSize","getCirclesPerRow","isHovered","marginTop","onClick","_c2","Home","_c3","$RefreshReg$"],"sources":["/Users/ilyashilov/Documents/projects/ub-hacking-create-your-repo-here-koozie/app/src/components/pages/home/home.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { motion } from 'framer-motion';\n\n// Define default values\nconst BOX_WIDTH = 200;\nconst BOX_HEIGHT = 200;\n\n// Random position generation for each circle within the bounding box\nfunction generateRandomPositionInBox(circles, size) {\n  let top, left;\n  const attempts = 100; // Limit the number of attempts to avoid infinite loop\n  let validPosition = false;\n\n  for (let attempt = 0; attempt < attempts; attempt++) {\n    top = Math.floor(Math.random() * (BOX_HEIGHT - size));\n    left = Math.floor(Math.random() * (BOX_WIDTH - size));\n\n    // Check if the new circle position intersects with any existing circles\n    validPosition = !circles.some(circle => {\n      const distX = Math.abs(circle.left - left);\n      const distY = Math.abs(circle.top - top);\n      const combinedRadius = (circle.size + size) / 2;\n      return distX < combinedRadius && distY < combinedRadius;\n    });\n\n    if (validPosition) break; // Found a valid position\n  }\n\n  return { top, left };\n}\n\n// Random scale generation for each circle (between 1 and 1.2 for subtle size variations)\nfunction generateRandomScale() {\n  return 1 + Math.random() * 0.5; // Random scale between 1 and 1.5\n}\n\n// Random wiggle values for animation\nfunction generateRandomWiggle() {\n  return Math.random() * 10 - 5; // Random wiggle value between -5 and 5\n}\n\n// Random size for each circle (between 60px and 160px for more spread)\nfunction generateRandomSize() {\n  return Math.floor(Math.random() * (160 - 60 + 1)) + 60; // Random size between 60px and 160px\n}\n\n// Updated random animation duration (between 6 and 10 seconds)\nfunction generateRandomDuration() {\n  return 6 + Math.random() * 4; // Random duration between 6 and 10 seconds\n}\n\nfunction PulsatingButton({ text, name, size, position }) {\n  const [scale] = useState(generateRandomScale); // Random scale factor\n  const [duration] = useState(generateRandomDuration); // Random animation duration\n\n  return (\n    <motion.button\n      style={{\n        position: 'absolute',\n        top: position.top,\n        left: position.left,\n        width: size, // Set circle size\n        height: size, // Set circle size\n        borderRadius: '50%',\n        backgroundColor: '#1A06D0', // Default background color\n        color: 'white',\n        fontSize: '16px',\n        fontWeight: 'bold',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        border: 'none',\n        cursor: 'pointer',\n        outline: 'none',\n      }}\n      animate={{\n        scale: [1, scale, 1], // Apply random scale factor in animation (subtle)\n        x: [0, generateRandomWiggle(), generateRandomWiggle(), generateRandomWiggle(), 0], // Random X wiggles\n        y: [0, generateRandomWiggle(), generateRandomWiggle(), generateRandomWiggle(), 0], // Random Y wiggles\n      }}\n      transition={{\n        duration: duration, // Apply random duration for animation\n        ease: 'easeInOut',\n        repeat: Infinity,\n        repeatType: 'loop',\n      }}\n      whileHover={{\n        scale: scale + 0.15, // Increase scale on hover\n        transition: { \n          scale: { \n            duration: 0.6, // Slower transition for increase in size\n            ease: 'easeInOut'\n          },\n        },\n      }}\n      whileTap={{\n        scale: scale + 0.1, // Slightly smaller scale when tapped (optional)\n        transition: {\n          scale: { duration: 0.3, ease: 'easeOut' }, // Smoother scale back after tap\n        },\n      }}\n    >\n      {text}\n    </motion.button>\n  );\n}\n\n  \n\nconst Hero = () => {\n    const [circles, setCircles] = useState([]); // Array of circles\n  \n    // Function to update the screen width on resize\n    useEffect(() => {\n      const handleResize = () => {\n        setScreenWidth(window.innerWidth);\n      };\n      window.addEventListener('resize', handleResize);\n      return () => window.removeEventListener('resize', handleResize);\n    }, []);\n  \n    // Function to add one more circle to the page\n    const addCircle = () => {\n      const circleName = prompt('Name your group', 'Circle ' + (circles.length + 1)); // Default name is Circle X\n      if (circleName) {\n        const randomSize = generateRandomSize(); // Get a random size for this circle\n        setCircles(prevCircles => [\n          ...prevCircles,\n          { id: prevCircles.length + 1, name: circleName, size: randomSize },\n        ]);\n      }\n    };\n  \n    // Function to handle the button click and show the alert\n    const handleButtonClick = () => {\n      alert('Going to the chat');\n    };\n  \n    return (\n      <section style={{ width: '100%', padding: 0, margin: 0 }}>\n        <div\n          style={{\n            display: 'flex',\n            flexWrap: 'wrap',\n            justifyContent: 'center',\n            gap: 20,\n            width: '100%',\n          }}\n        >\n          {/* Create dynamic number of circles */}\n          {circles.map((circle, index) => {\n            const colSize = getCirclesPerRow(); // Random number of circles per row\n            const position = generateRandomPositionInBox();\n            return (\n              <div\n                key={circle.id}\n                style={{\n                  position: 'relative',\n                  width: BOX_WIDTH,\n                  height: BOX_HEIGHT,\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  margin: 10,\n                }}\n              >\n                <PulsatingButton\n                  text={circle.name}\n                  name={circle.name}\n                  size={circle.size}\n                  position={position}\n                  isHovered={false}\n                />\n              </div>\n            );\n          })}\n        </div>\n  \n        {/* Add Circle Button */}\n        <div style={{ display: 'flex', justifyContent: 'center', marginTop: '20px' }}>\n          <button\n            onClick={handleButtonClick} // Handle button click\n            style={{\n              padding: '10px 20px',\n              fontSize: '16px',\n              backgroundColor: '#3498db',\n              color: 'white',\n              border: 'none',\n              borderRadius: '5px',\n              cursor: 'pointer',\n            }}\n          >\n            Add Circle\n          </button>\n        </div>\n      </section>\n    );\n  };\n  \n\nconst Home = () => {\n  return <Hero />;\n};\n\nexport default Home;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
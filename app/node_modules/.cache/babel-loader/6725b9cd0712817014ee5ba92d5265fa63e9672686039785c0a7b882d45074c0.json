{"ast":null,"code":"var _jsxFileName = \"/Users/ilyashilov/Documents/projects/ub-hacking-create-your-repo-here-koozie/app/src/components/pages/home/home.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react'; // Importing useState and useEffect\nimport { motion } from 'framer-motion';\n\n// Constants for the box size\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BOX_WIDTH = 200;\nconst BOX_HEIGHT = 200;\n\n// Random position generation for each circle within the bounding box\nfunction generateRandomPositionInBox() {\n  const top = Math.floor(Math.random() * (BOX_HEIGHT - 100)); // Adjust for button height\n  const left = Math.floor(Math.random() * (BOX_WIDTH - 100)); // Adjust for button width\n  return {\n    top,\n    left\n  };\n}\n\n// Random size for each circle (between 80px and 120px)\nfunction generateRandomSize() {\n  return Math.floor(Math.random() * (120 - 80 + 1)) + 80; // Random size between 80px and 120px\n}\n\n// PulsatingButton component\nfunction PulsatingButton({\n  text,\n  name,\n  size\n}) {\n  _s();\n  const [position] = useState(generateRandomPositionInBox); // Get random position for each circle\n\n  return /*#__PURE__*/_jsxDEV(motion.button, {\n    style: {\n      position: 'absolute',\n      top: position.top,\n      left: position.left,\n      width: size,\n      // Set circle size\n      height: size,\n      // Set circle size\n      borderRadius: '50%',\n      backgroundColor: '#1A06D0',\n      color: 'white',\n      fontSize: '16px',\n      fontWeight: 'bold',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      border: 'none',\n      cursor: 'pointer',\n      outline: 'none'\n    },\n    animate: {\n      scale: [1, 1.2, 1],\n      // Apply a pulsating scale effect\n      x: [0, Math.random() * 10 - 5, 0],\n      // Random horizontal wiggle\n      y: [0, Math.random() * 10 - 5, 0] // Random vertical wiggle\n    },\n    transition: {\n      duration: 3,\n      // Pulsating duration\n      ease: 'easeInOut',\n      repeat: Infinity,\n      repeatType: 'loop'\n    },\n    whileHover: {\n      scale: 1.3,\n      // Increase size on hover\n      transition: {\n        duration: 0.4,\n        ease: 'easeInOut'\n      }\n    },\n    onClick: () => alert('Going to the chat') // Show alert on button click\n    ,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(PulsatingButton, \"MqYZ42dVP6Aqoqu/8TTSMzXLrS8=\");\n_c = PulsatingButton;\nconst Hero = () => {\n  _s2();\n  const [circles, setCircles] = useState([]); // Array of circles\n  const [screenWidth, setScreenWidth] = useState(window.innerWidth); // Store screen width\n\n  // Function to update the screen width on resize\n  useEffect(() => {\n    const handleResize = () => {\n      setScreenWidth(window.innerWidth); // Update screen width on resize\n    };\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  // Function to get random number of circles per row (either 3 or 4)\n  const getCirclesPerRow = () => {\n    return Math.floor(Math.random() * (4 - 3 + 1)) + 3; // Random value of 3 or 4 circles per row\n  };\n\n  // Function to add one more circle to the page\n  const addCircle = () => {\n    const circleName = prompt('Name your group', 'Circle ' + (circles.length + 1)); // Default name is Circle X\n    if (circleName) {\n      const randomSize = generateRandomSize(); // Get a random size for this circle\n      setCircles(prevCircles => [...prevCircles, {\n        id: prevCircles.length + 1,\n        name: circleName,\n        size: randomSize\n      }]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    style: {\n      width: '100%',\n      padding: 0,\n      margin: 0\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n        gap: 20,\n        width: '100%'\n      },\n      children: circles.map(circle => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'relative',\n            width: BOX_WIDTH,\n            height: BOX_HEIGHT,\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            margin: 10\n          },\n          children: /*#__PURE__*/_jsxDEV(PulsatingButton, {\n            text: circle.name,\n            name: circle.name,\n            size: circle.size\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this)\n        }, circle.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        marginTop: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addCircle // Add a circle when the button is clicked\n        ,\n        style: {\n          padding: '10px 20px',\n          fontSize: '16px',\n          backgroundColor: '#3498db',\n          color: 'white',\n          border: 'none',\n          borderRadius: '5px',\n          cursor: 'pointer'\n        },\n        children: \"Add Circle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s2(Hero, \"pYwi/znRdtLdBtnO1aasIJNH1Jo=\");\n_c2 = Hero;\nconst Home = () => {\n  return /*#__PURE__*/_jsxDEV(Hero, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 10\n  }, this);\n};\n_c3 = Home;\nexport default Home;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"PulsatingButton\");\n$RefreshReg$(_c2, \"Hero\");\n$RefreshReg$(_c3, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","motion","jsxDEV","_jsxDEV","BOX_WIDTH","BOX_HEIGHT","generateRandomPositionInBox","top","Math","floor","random","left","generateRandomSize","PulsatingButton","text","name","size","_s","position","button","style","width","height","borderRadius","backgroundColor","color","fontSize","fontWeight","display","alignItems","justifyContent","border","cursor","outline","animate","scale","x","y","transition","duration","ease","repeat","Infinity","repeatType","whileHover","onClick","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Hero","_s2","circles","setCircles","screenWidth","setScreenWidth","window","innerWidth","handleResize","addEventListener","removeEventListener","getCirclesPerRow","addCircle","circleName","prompt","length","randomSize","prevCircles","id","padding","margin","flexWrap","gap","map","circle","marginTop","_c2","Home","_c3","$RefreshReg$"],"sources":["/Users/ilyashilov/Documents/projects/ub-hacking-create-your-repo-here-koozie/app/src/components/pages/home/home.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';  // Importing useState and useEffect\nimport { motion } from 'framer-motion';\n\n// Constants for the box size\nconst BOX_WIDTH = 200;\nconst BOX_HEIGHT = 200;\n\n// Random position generation for each circle within the bounding box\nfunction generateRandomPositionInBox() {\n  const top = Math.floor(Math.random() * (BOX_HEIGHT - 100)); // Adjust for button height\n  const left = Math.floor(Math.random() * (BOX_WIDTH - 100)); // Adjust for button width\n  return { top, left };\n}\n\n// Random size for each circle (between 80px and 120px)\nfunction generateRandomSize() {\n  return Math.floor(Math.random() * (120 - 80 + 1)) + 80; // Random size between 80px and 120px\n}\n\n// PulsatingButton component\nfunction PulsatingButton({ text, name, size }) {\n  const [position] = useState(generateRandomPositionInBox); // Get random position for each circle\n\n  return (\n    <motion.button\n      style={{\n        position: 'absolute',\n        top: position.top,\n        left: position.left,\n        width: size, // Set circle size\n        height: size, // Set circle size\n        borderRadius: '50%',\n        backgroundColor: '#1A06D0',\n        color: 'white',\n        fontSize: '16px',\n        fontWeight: 'bold',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        border: 'none',\n        cursor: 'pointer',\n        outline: 'none',\n      }}\n      animate={{\n        scale: [1, 1.2, 1], // Apply a pulsating scale effect\n        x: [0, Math.random() * 10 - 5, 0], // Random horizontal wiggle\n        y: [0, Math.random() * 10 - 5, 0], // Random vertical wiggle\n      }}\n      transition={{\n        duration: 3, // Pulsating duration\n        ease: 'easeInOut',\n        repeat: Infinity,\n        repeatType: 'loop',\n      }}\n      whileHover={{\n        scale: 1.3, // Increase size on hover\n        transition: { duration: 0.4, ease: 'easeInOut' },\n      }}\n      onClick={() => alert('Going to the chat')} // Show alert on button click\n    >\n      {text}\n    </motion.button>\n  );\n}\n\nconst Hero = () => {\n  const [circles, setCircles] = useState([]); // Array of circles\n  const [screenWidth, setScreenWidth] = useState(window.innerWidth); // Store screen width\n\n  // Function to update the screen width on resize\n  useEffect(() => {\n    const handleResize = () => {\n      setScreenWidth(window.innerWidth); // Update screen width on resize\n    };\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  // Function to get random number of circles per row (either 3 or 4)\n  const getCirclesPerRow = () => {\n    return Math.floor(Math.random() * (4 - 3 + 1)) + 3; // Random value of 3 or 4 circles per row\n  };\n\n  // Function to add one more circle to the page\n  const addCircle = () => {\n    const circleName = prompt('Name your group', 'Circle ' + (circles.length + 1)); // Default name is Circle X\n    if (circleName) {\n      const randomSize = generateRandomSize(); // Get a random size for this circle\n      setCircles(prevCircles => [\n        ...prevCircles,\n        { id: prevCircles.length + 1, name: circleName, size: randomSize },\n      ]);\n    }\n  };\n\n  return (\n    <section style={{ width: '100%', padding: 0, margin: 0 }}>\n      <div\n        style={{\n          display: 'flex',\n          flexWrap: 'wrap',\n          justifyContent: 'center',\n          gap: 20,\n          width: '100%',\n        }}\n      >\n        {/* Create dynamic number of circles */}\n        {circles.map((circle) => {\n          return (\n            <div\n              key={circle.id}\n              style={{\n                position: 'relative',\n                width: BOX_WIDTH,\n                height: BOX_HEIGHT,\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                margin: 10,\n              }}\n            >\n              <PulsatingButton text={circle.name} name={circle.name} size={circle.size} />\n            </div>\n          );\n        })}\n      </div>\n\n      {/* Add Circle Button */}\n      <div style={{ display: 'flex', justifyContent: 'center', marginTop: '20px' }}>\n        <button\n          onClick={addCircle} // Add a circle when the button is clicked\n          style={{\n            padding: '10px 20px',\n            fontSize: '16px',\n            backgroundColor: '#3498db',\n            color: 'white',\n            border: 'none',\n            borderRadius: '5px',\n            cursor: 'pointer',\n          }}\n        >\n          Add Circle\n        </button>\n      </div>\n    </section>\n  );\n};\n\nconst Home = () => {\n  return <Hero />;\n};\n\nexport default Home;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
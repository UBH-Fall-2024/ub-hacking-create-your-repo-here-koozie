{"ast":null,"code":"var _jsxFileName = \"/Users/ilyashilov/Documents/projects/ub-hacking-create-your-repo-here-koozie/app/src/components/pages/home/home.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { motion } from 'framer-motion';\nimport * as ReactDOMClient from 'react-dom/client';\n\n// Define box dimensions and spacing\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BOX_WIDTH = 200;\nconst BOX_HEIGHT = 200;\nconst COLUMNS = 3; // 3 circles per row\n\n// Random position generation for each circle within the bounding box\nfunction generateRandomPositionInBox() {\n  const top = Math.floor(Math.random() * (BOX_HEIGHT - 100)); // Adjust for button height\n  const left = Math.floor(Math.random() * (BOX_WIDTH - 100)); // Adjust for button width\n  return {\n    top,\n    left\n  };\n}\n\n// Random size for each circle (between 80px and 120px)\nfunction generateRandomSize() {\n  return Math.floor(Math.random() * (120 - 80 + 1)) + 80; // Random size between 80px and 120px\n}\nfunction PulsatingButton({\n  text,\n  name,\n  initialSize\n}) {\n  _s();\n  const [position] = useState(generateRandomPositionInBox); // Get random position for each circle\n  const [size] = useState(initialSize); // Initial random size for each circle\n  const [hovered, setHovered] = useState(false); // Track hover state for each circle\n\n  const scale = hovered ? 1.1 : 1; // Increase size by 10% when hovered\n\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    style: {\n      position: 'absolute',\n      top: position.top,\n      left: position.left,\n      width: size,\n      // Set circle size\n      height: size,\n      // Set circle size\n      borderRadius: '50%',\n      backgroundColor: hovered ? '#0D1F8B' : '#1A06D0',\n      // Darken background on hover\n      color: 'white',\n      fontSize: '16px',\n      fontWeight: 'bold',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      border: 'none',\n      cursor: 'pointer',\n      outline: 'none',\n      transition: 'all 0.4s ease' // Smooth transition for both color and size\n    },\n    animate: {\n      scale: scale,\n      // Apply smooth scaling\n      x: [0, Math.random() * 5 - 2.5, 0],\n      // Random slight wiggle in x direction\n      y: [0, Math.random() * 5 - 2.5, 0],\n      // Random slight wiggle in y direction\n      rotate: [0, Math.random() * 10 - 5, 0] // Random slight rotation for wiggle\n    },\n    transition: {\n      duration: 2,\n      repeat: Infinity,\n      ease: 'easeInOut',\n      repeatType: 'loop'\n    },\n    onMouseEnter: () => setHovered(true) // On hover, set hovered state to true\n    ,\n    onMouseLeave: () => setHovered(false) // On hover out, set hovered state to false\n    ,\n    onClick: () => alert(`${name} clicked!`),\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(PulsatingButton, \"1JF0OCVeKaLXLJgmCw1kNV7Wfi4=\");\n_c = PulsatingButton;\nconst Hero = () => {\n  _s2();\n  const [circles, setCircles] = useState([]); // Array of circles\n\n  // Function to add one more circle to the page\n  const addCircle = () => {\n    // Prompt user for a name when adding a circle\n    const circleName = prompt('Name your group', 'Circle ' + (circles.length + 1)); // Default name is Circle X\n    if (circleName) {\n      const randomSize = generateRandomSize(); // Get a random size for this circle\n      setCircles(prevCircles => [...prevCircles, {\n        id: prevCircles.length + 1,\n        name: circleName,\n        initialSize: randomSize\n      }]);\n    }\n  };\n\n  // Calculate the number of rows based on the total circles\n  const rows = Math.ceil(circles.length / COLUMNS);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        gap: 20\n      },\n      children: Array.from({\n        length: rows\n      }).map((_, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: 20\n        },\n        children: Array.from({\n          length: COLUMNS\n        }).map((_, colIndex) => {\n          const circleIndex = rowIndex * COLUMNS + colIndex; // Calculate the circle index\n          if (circleIndex < circles.length) {\n            const circle = circles[circleIndex];\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                position: 'relative',\n                width: BOX_WIDTH,\n                height: BOX_HEIGHT,\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center'\n              },\n              children: /*#__PURE__*/_jsxDEV(PulsatingButton, {\n                text: circle.name,\n                name: circle.name,\n                initialSize: circle.initialSize\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 21\n              }, this)\n            }, circle.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 19\n            }, this);\n          }\n          return null; // Don't render empty spots if no circle is there\n        })\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        marginTop: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addCircle,\n        style: {\n          padding: '10px 20px',\n          fontSize: '16px',\n          backgroundColor: '#3498db',\n          color: 'white',\n          border: 'none',\n          borderRadius: '5px',\n          cursor: 'pointer'\n        },\n        children: \"Add Circle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s2(Hero, \"pUOjDlkpS0j6CCR2nrYuQeFKTvU=\");\n_c2 = Hero;\nconst Home = () => {\n  return /*#__PURE__*/_jsxDEV(Hero, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 10\n  }, this);\n};\n_c3 = Home;\nexport default Home;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"PulsatingButton\");\n$RefreshReg$(_c2, \"Hero\");\n$RefreshReg$(_c3, \"Home\");","map":{"version":3,"names":["React","useState","motion","ReactDOMClient","jsxDEV","_jsxDEV","BOX_WIDTH","BOX_HEIGHT","COLUMNS","generateRandomPositionInBox","top","Math","floor","random","left","generateRandomSize","PulsatingButton","text","name","initialSize","_s","position","size","hovered","setHovered","scale","div","style","width","height","borderRadius","backgroundColor","color","fontSize","fontWeight","display","alignItems","justifyContent","border","cursor","outline","transition","animate","x","y","rotate","duration","repeat","Infinity","ease","repeatType","onMouseEnter","onMouseLeave","onClick","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Hero","_s2","circles","setCircles","addCircle","circleName","prompt","length","randomSize","prevCircles","id","rows","ceil","flexDirection","gap","Array","from","map","_","rowIndex","colIndex","circleIndex","circle","marginTop","padding","_c2","Home","_c3","$RefreshReg$"],"sources":["/Users/ilyashilov/Documents/projects/ub-hacking-create-your-repo-here-koozie/app/src/components/pages/home/home.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { motion } from 'framer-motion';\nimport * as ReactDOMClient from 'react-dom/client';\n\n// Define box dimensions and spacing\nconst BOX_WIDTH = 200;\nconst BOX_HEIGHT = 200;\nconst COLUMNS = 3; // 3 circles per row\n\n// Random position generation for each circle within the bounding box\nfunction generateRandomPositionInBox() {\n  const top = Math.floor(Math.random() * (BOX_HEIGHT - 100)); // Adjust for button height\n  const left = Math.floor(Math.random() * (BOX_WIDTH - 100)); // Adjust for button width\n  return { top, left };\n}\n\n// Random size for each circle (between 80px and 120px)\nfunction generateRandomSize() {\n  return Math.floor(Math.random() * (120 - 80 + 1)) + 80; // Random size between 80px and 120px\n}\n\nfunction PulsatingButton({ text, name, initialSize }) {\n  const [position] = useState(generateRandomPositionInBox); // Get random position for each circle\n  const [size] = useState(initialSize); // Initial random size for each circle\n  const [hovered, setHovered] = useState(false); // Track hover state for each circle\n\n  const scale = hovered ? 1.1 : 1; // Increase size by 10% when hovered\n\n  return (\n    <motion.div\n      style={{\n        position: 'absolute',\n        top: position.top,\n        left: position.left,\n        width: size, // Set circle size\n        height: size, // Set circle size\n        borderRadius: '50%',\n        backgroundColor: hovered ? '#0D1F8B' : '#1A06D0', // Darken background on hover\n        color: 'white',\n        fontSize: '16px',\n        fontWeight: 'bold',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        border: 'none',\n        cursor: 'pointer',\n        outline: 'none',\n        transition: 'all 0.4s ease', // Smooth transition for both color and size\n      }}\n      animate={{\n        scale: scale, // Apply smooth scaling\n        x: [0, Math.random() * 5 - 2.5, 0], // Random slight wiggle in x direction\n        y: [0, Math.random() * 5 - 2.5, 0], // Random slight wiggle in y direction\n        rotate: [0, Math.random() * 10 - 5, 0], // Random slight rotation for wiggle\n      }}\n      transition={{\n        duration: 2,\n        repeat: Infinity,\n        ease: 'easeInOut',\n        repeatType: 'loop',\n      }}\n      onMouseEnter={() => setHovered(true)} // On hover, set hovered state to true\n      onMouseLeave={() => setHovered(false)} // On hover out, set hovered state to false\n      onClick={() => alert(`${name} clicked!`)}\n    >\n      {text}\n    </motion.div>\n  );\n}\n\nconst Hero = () => {\n  const [circles, setCircles] = useState([]); // Array of circles\n\n  // Function to add one more circle to the page\n  const addCircle = () => {\n    // Prompt user for a name when adding a circle\n    const circleName = prompt('Name your group', 'Circle ' + (circles.length + 1)); // Default name is Circle X\n    if (circleName) {\n      const randomSize = generateRandomSize(); // Get a random size for this circle\n      setCircles(prevCircles => [\n        ...prevCircles,\n        { id: prevCircles.length + 1, name: circleName, initialSize: randomSize },\n      ]);\n    }\n  };\n\n  // Calculate the number of rows based on the total circles\n  const rows = Math.ceil(circles.length / COLUMNS);\n\n  return (\n    <section>\n      {/* Body with Circles */}\n      <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', gap: 20 }}>\n        {/* Create rows dynamically */}\n        {Array.from({ length: rows }).map((_, rowIndex) => (\n          <div key={rowIndex} style={{ display: 'flex', gap: 20 }}>\n            {/* Create 3 circles per row */}\n            {Array.from({ length: COLUMNS }).map((_, colIndex) => {\n              const circleIndex = rowIndex * COLUMNS + colIndex; // Calculate the circle index\n              if (circleIndex < circles.length) {\n                const circle = circles[circleIndex];\n                return (\n                  <div\n                    key={circle.id}\n                    style={{\n                      position: 'relative',\n                      width: BOX_WIDTH,\n                      height: BOX_HEIGHT,\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                    }}\n                  >\n                    <PulsatingButton text={circle.name} name={circle.name} initialSize={circle.initialSize} />\n                  </div>\n                );\n              }\n              return null; // Don't render empty spots if no circle is there\n            })}\n          </div>\n        ))}\n      </div>\n\n      {/* Add Circle Button */}\n      <div style={{ display: 'flex', justifyContent: 'center', marginTop: '20px' }}>\n        <button\n          onClick={addCircle}\n          style={{\n            padding: '10px 20px',\n            fontSize: '16px',\n            backgroundColor: '#3498db',\n            color: 'white',\n            border: 'none',\n            borderRadius: '5px',\n            cursor: 'pointer',\n          }}\n        >\n          Add Circle\n        </button>\n      </div>\n    </section>\n  );\n};\n\nconst Home = () => {\n  return <Hero />;\n};\n\nexport default Home;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
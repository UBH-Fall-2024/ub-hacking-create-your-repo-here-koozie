{"ast":null,"code":"var _jsxFileName = \"/Users/ilyashilov/Documents/projects/ub-hacking-create-your-repo-here-koozie/app/src/components/pages/home/home.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { motion } from 'framer-motion';\nimport * as ReactDOMClient from 'react-dom/client';\n\n// Define box dimensions and spacing\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BOX_WIDTH = 200;\nconst BOX_HEIGHT = 200;\nconst COLUMNS = 3; // 3 circles per row\n\nfunction generateRandomPositionInBox() {\n  const top = Math.floor(Math.random() * (BOX_HEIGHT - 100)); // Adjust for button height\n  const left = Math.floor(Math.random() * (BOX_WIDTH - 100)); // Adjust for button width\n  return {\n    top,\n    left\n  };\n}\nfunction generateRandomScale() {\n  return 1 + Math.random() * 0.5; // Random scale between 1 and 1.5\n}\nfunction PulsatingButton({\n  text,\n  name\n}) {\n  _s();\n  const [position] = useState(generateRandomPositionInBox); // Get random position for each circle\n  const [scale] = useState(generateRandomScale); // Random scale factor\n\n  // Generating a random wiggle animation for X and Y axis\n  const randomWiggle = () => {\n    return Math.random() * 15 - 7.5; // Random movement between -7.5 and +7.5\n  };\n  return /*#__PURE__*/_jsxDEV(motion.button, {\n    style: {\n      position: 'absolute',\n      top: position.top,\n      left: position.left,\n      width: 100,\n      height: 100,\n      borderRadius: '50%',\n      backgroundColor: '#1A06D0',\n      color: 'white',\n      fontSize: '16px',\n      fontWeight: 'bold',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      border: 'none',\n      cursor: 'pointer',\n      outline: 'none'\n    },\n    animate: {\n      scale: [1, scale, 1],\n      // Apply random scale factor in animation\n      x: [0, randomWiggle(), randomWiggle(), 0],\n      // Multiple random wiggle movements in X direction\n      y: [0, randomWiggle(), randomWiggle(), 0] // Multiple random wiggle movements in Y direction\n    },\n    transition: {\n      duration: 2,\n      // Duration for each wiggle\n      ease: 'easeInOut',\n      repeat: Infinity,\n      // Continuously repeat the wiggle animation\n      repeatType: 'loop' // Loop the wiggle effect\n    },\n    whileHover: {\n      scale: scale + 0.1\n    } // Slightly increase scale on hover\n    ,\n    onClick: () => alert(`${name} clicked!`),\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(PulsatingButton, \"KA1YqHJWn/JsKCRdaaqgU3PjftA=\");\n_c = PulsatingButton;\nconst Hero = () => {\n  _s2();\n  const [circles, setCircles] = useState([]); // Array of circles\n  const [newCircleName, setNewCircleName] = useState(''); // State to store new circle name\n\n  // Function to add one more circle to the page\n  const addCircle = () => {\n    // Prompt user for a name when adding a circle\n    const circleName = prompt('Name your group', 'Circle ' + (circles.length + 1)); // Default name is Circle X\n    if (circleName) {\n      setCircles(prevCircles => [...prevCircles, {\n        id: prevCircles.length + 1,\n        name: circleName\n      }]);\n    }\n  };\n\n  // Calculate the number of rows based on the total circles\n  const rows = Math.ceil(circles.length / COLUMNS);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        gap: 20\n      },\n      children: Array.from({\n        length: rows\n      }).map((_, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: 20\n        },\n        children: Array.from({\n          length: COLUMNS\n        }).map((_, colIndex) => {\n          const circleIndex = rowIndex * COLUMNS + colIndex; // Calculate the circle index\n          if (circleIndex < circles.length) {\n            const circle = circles[circleIndex];\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                position: 'relative',\n                width: BOX_WIDTH,\n                height: BOX_HEIGHT,\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center'\n              },\n              children: /*#__PURE__*/_jsxDEV(PulsatingButton, {\n                text: circle.name,\n                name: circle.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 21\n              }, this)\n            }, circle.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 19\n            }, this);\n          }\n          return null; // Don't render empty spots if no circle is there\n        })\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        marginTop: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addCircle,\n        style: {\n          padding: '10px 20px',\n          fontSize: '16px',\n          backgroundColor: '#3498db',\n          color: 'white',\n          border: 'none',\n          borderRadius: '5px',\n          cursor: 'pointer'\n        },\n        children: \"Add Circle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s2(Hero, \"AqxDd+Ghdjqjj82dfU708ZRwsOc=\");\n_c2 = Hero;\nconst Home = () => {\n  return /*#__PURE__*/_jsxDEV(Hero, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 10\n  }, this);\n};\n_c3 = Home;\nexport default Home;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"PulsatingButton\");\n$RefreshReg$(_c2, \"Hero\");\n$RefreshReg$(_c3, \"Home\");","map":{"version":3,"names":["React","useState","motion","ReactDOMClient","jsxDEV","_jsxDEV","BOX_WIDTH","BOX_HEIGHT","COLUMNS","generateRandomPositionInBox","top","Math","floor","random","left","generateRandomScale","PulsatingButton","text","name","_s","position","scale","randomWiggle","button","style","width","height","borderRadius","backgroundColor","color","fontSize","fontWeight","display","alignItems","justifyContent","border","cursor","outline","animate","x","y","transition","duration","ease","repeat","Infinity","repeatType","whileHover","onClick","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Hero","_s2","circles","setCircles","newCircleName","setNewCircleName","addCircle","circleName","prompt","length","prevCircles","id","rows","ceil","flexDirection","gap","Array","from","map","_","rowIndex","colIndex","circleIndex","circle","marginTop","padding","_c2","Home","_c3","$RefreshReg$"],"sources":["/Users/ilyashilov/Documents/projects/ub-hacking-create-your-repo-here-koozie/app/src/components/pages/home/home.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { motion } from 'framer-motion';\nimport * as ReactDOMClient from 'react-dom/client';\n\n// Define box dimensions and spacing\nconst BOX_WIDTH = 200;\nconst BOX_HEIGHT = 200;\nconst COLUMNS = 3; // 3 circles per row\n\nfunction generateRandomPositionInBox() {\n  const top = Math.floor(Math.random() * (BOX_HEIGHT - 100)); // Adjust for button height\n  const left = Math.floor(Math.random() * (BOX_WIDTH - 100)); // Adjust for button width\n  return { top, left };\n}\n\nfunction generateRandomScale() {\n  return 1 + Math.random() * 0.5; // Random scale between 1 and 1.5\n}\n\nfunction PulsatingButton({ text, name }) {\n  const [position] = useState(generateRandomPositionInBox); // Get random position for each circle\n  const [scale] = useState(generateRandomScale); // Random scale factor\n\n  // Generating a random wiggle animation for X and Y axis\n  const randomWiggle = () => {\n    return Math.random() * 15 - 7.5; // Random movement between -7.5 and +7.5\n  };\n\n  return (\n    <motion.button\n      style={{\n        position: 'absolute',\n        top: position.top,\n        left: position.left,\n        width: 100,\n        height: 100,\n        borderRadius: '50%',\n        backgroundColor: '#1A06D0',\n        color: 'white',\n        fontSize: '16px',\n        fontWeight: 'bold',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        border: 'none',\n        cursor: 'pointer',\n        outline: 'none',\n      }}\n      animate={{\n        scale: [1, scale, 1], // Apply random scale factor in animation\n        x: [0, randomWiggle(), randomWiggle(), 0], // Multiple random wiggle movements in X direction\n        y: [0, randomWiggle(), randomWiggle(), 0], // Multiple random wiggle movements in Y direction\n      }}\n      transition={{\n        duration: 2, // Duration for each wiggle\n        ease: 'easeInOut',\n        repeat: Infinity, // Continuously repeat the wiggle animation\n        repeatType: 'loop', // Loop the wiggle effect\n      }}\n      whileHover={{ scale: scale + 0.1 }} // Slightly increase scale on hover\n      onClick={() => alert(`${name} clicked!`)}\n    >\n      {text}\n    </motion.button>\n  );\n}\n\nconst Hero = () => {\n  const [circles, setCircles] = useState([]); // Array of circles\n  const [newCircleName, setNewCircleName] = useState(''); // State to store new circle name\n\n  // Function to add one more circle to the page\n  const addCircle = () => {\n    // Prompt user for a name when adding a circle\n    const circleName = prompt('Name your group', 'Circle ' + (circles.length + 1)); // Default name is Circle X\n    if (circleName) {\n      setCircles(prevCircles => [\n        ...prevCircles,\n        { id: prevCircles.length + 1, name: circleName },\n      ]);\n    }\n  };\n\n  // Calculate the number of rows based on the total circles\n  const rows = Math.ceil(circles.length / COLUMNS);\n\n  return (\n    <section>\n      {/* Body with Circles */}\n      <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', gap: 20 }}>\n        {/* Create rows dynamically */}\n        {Array.from({ length: rows }).map((_, rowIndex) => (\n          <div key={rowIndex} style={{ display: 'flex', gap: 20 }}>\n            {/* Create 3 circles per row */}\n            {Array.from({ length: COLUMNS }).map((_, colIndex) => {\n              const circleIndex = rowIndex * COLUMNS + colIndex; // Calculate the circle index\n              if (circleIndex < circles.length) {\n                const circle = circles[circleIndex];\n                return (\n                  <div\n                    key={circle.id}\n                    style={{\n                      position: 'relative',\n                      width: BOX_WIDTH,\n                      height: BOX_HEIGHT,\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                    }}\n                  >\n                    <PulsatingButton text={circle.name} name={circle.name} />\n                  </div>\n                );\n              }\n              return null; // Don't render empty spots if no circle is there\n            })}\n          </div>\n        ))}\n      </div>\n\n      {/* Add Circle Button */}\n      <div style={{ display: 'flex', justifyContent: 'center', marginTop: '20px' }}>\n        <button\n          onClick={addCircle}\n          style={{\n            padding: '10px 20px',\n            fontSize: '16px',\n            backgroundColor: '#3498db',\n            color: 'white',\n            border: 'none',\n            borderRadius: '5px',\n            cursor: 'pointer',\n          }}\n        >\n          Add Circle\n        </button>\n      </div>\n    </section>\n  );\n};\n\nconst Home = () => {\n  return <Hero />;\n};\n\nexport default Home;\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,QAAQ,eAAe;AACtC,OAAO,KAAKC,cAAc,MAAM,kBAAkB;;AAElD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,SAAS,GAAG,GAAG;AACrB,MAAMC,UAAU,GAAG,GAAG;AACtB,MAAMC,OAAO,GAAG,CAAC,CAAC,CAAC;;AAEnB,SAASC,2BAA2BA,CAAA,EAAG;EACrC,MAAMC,GAAG,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIN,UAAU,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;EAC5D,MAAMO,IAAI,GAAGH,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIP,SAAS,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;EAC5D,OAAO;IAAEI,GAAG;IAAEI;EAAK,CAAC;AACtB;AAEA,SAASC,mBAAmBA,CAAA,EAAG;EAC7B,OAAO,CAAC,GAAGJ,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;AAClC;AAEA,SAASG,eAAeA,CAAC;EAAEC,IAAI;EAAEC;AAAK,CAAC,EAAE;EAAAC,EAAA;EACvC,MAAM,CAACC,QAAQ,CAAC,GAAGnB,QAAQ,CAACQ,2BAA2B,CAAC,CAAC,CAAC;EAC1D,MAAM,CAACY,KAAK,CAAC,GAAGpB,QAAQ,CAACc,mBAAmB,CAAC,CAAC,CAAC;;EAE/C;EACA,MAAMO,YAAY,GAAGA,CAAA,KAAM;IACzB,OAAOX,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,CAAC,CAAC;EACnC,CAAC;EAED,oBACER,OAAA,CAACH,MAAM,CAACqB,MAAM;IACZC,KAAK,EAAE;MACLJ,QAAQ,EAAE,UAAU;MACpBV,GAAG,EAAEU,QAAQ,CAACV,GAAG;MACjBI,IAAI,EAAEM,QAAQ,CAACN,IAAI;MACnBW,KAAK,EAAE,GAAG;MACVC,MAAM,EAAE,GAAG;MACXC,YAAY,EAAE,KAAK;MACnBC,eAAe,EAAE,SAAS;MAC1BC,KAAK,EAAE,OAAO;MACdC,QAAQ,EAAE,MAAM;MAChBC,UAAU,EAAE,MAAM;MAClBC,OAAO,EAAE,MAAM;MACfC,UAAU,EAAE,QAAQ;MACpBC,cAAc,EAAE,QAAQ;MACxBC,MAAM,EAAE,MAAM;MACdC,MAAM,EAAE,SAAS;MACjBC,OAAO,EAAE;IACX,CAAE;IACFC,OAAO,EAAE;MACPjB,KAAK,EAAE,CAAC,CAAC,EAAEA,KAAK,EAAE,CAAC,CAAC;MAAE;MACtBkB,CAAC,EAAE,CAAC,CAAC,EAAEjB,YAAY,CAAC,CAAC,EAAEA,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC;MAAE;MAC3CkB,CAAC,EAAE,CAAC,CAAC,EAAElB,YAAY,CAAC,CAAC,EAAEA,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,CAAE;IAC7C,CAAE;IACFmB,UAAU,EAAE;MACVC,QAAQ,EAAE,CAAC;MAAE;MACbC,IAAI,EAAE,WAAW;MACjBC,MAAM,EAAEC,QAAQ;MAAE;MAClBC,UAAU,EAAE,MAAM,CAAE;IACtB,CAAE;IACFC,UAAU,EAAE;MAAE1B,KAAK,EAAEA,KAAK,GAAG;IAAI,CAAE,CAAC;IAAA;IACpC2B,OAAO,EAAEA,CAAA,KAAMC,KAAK,CAAC,GAAG/B,IAAI,WAAW,CAAE;IAAAgC,QAAA,EAExCjC;EAAI;IAAAkC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAEpB;AAACnC,EAAA,CA9CQH,eAAe;AAAAuC,EAAA,GAAfvC,eAAe;AAgDxB,MAAMwC,IAAI,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACjB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAG1D,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC5C,MAAM,CAAC2D,aAAa,EAAEC,gBAAgB,CAAC,GAAG5D,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAExD;EACA,MAAM6D,SAAS,GAAGA,CAAA,KAAM;IACtB;IACA,MAAMC,UAAU,GAAGC,MAAM,CAAC,iBAAiB,EAAE,SAAS,IAAIN,OAAO,CAACO,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAChF,IAAIF,UAAU,EAAE;MACdJ,UAAU,CAACO,WAAW,IAAI,CACxB,GAAGA,WAAW,EACd;QAAEC,EAAE,EAAED,WAAW,CAACD,MAAM,GAAG,CAAC;QAAE/C,IAAI,EAAE6C;MAAW,CAAC,CACjD,CAAC;IACJ;EACF,CAAC;;EAED;EACA,MAAMK,IAAI,GAAGzD,IAAI,CAAC0D,IAAI,CAACX,OAAO,CAACO,MAAM,GAAGzD,OAAO,CAAC;EAEhD,oBACEH,OAAA;IAAA6C,QAAA,gBAEE7C,OAAA;MAAKmB,KAAK,EAAE;QAAEQ,OAAO,EAAE,MAAM;QAAEsC,aAAa,EAAE,QAAQ;QAAErC,UAAU,EAAE,QAAQ;QAAEsC,GAAG,EAAE;MAAG,CAAE;MAAArB,QAAA,EAErFsB,KAAK,CAACC,IAAI,CAAC;QAAER,MAAM,EAAEG;MAAK,CAAC,CAAC,CAACM,GAAG,CAAC,CAACC,CAAC,EAAEC,QAAQ,kBAC5CvE,OAAA;QAAoBmB,KAAK,EAAE;UAAEQ,OAAO,EAAE,MAAM;UAAEuC,GAAG,EAAE;QAAG,CAAE;QAAArB,QAAA,EAErDsB,KAAK,CAACC,IAAI,CAAC;UAAER,MAAM,EAAEzD;QAAQ,CAAC,CAAC,CAACkE,GAAG,CAAC,CAACC,CAAC,EAAEE,QAAQ,KAAK;UACpD,MAAMC,WAAW,GAAGF,QAAQ,GAAGpE,OAAO,GAAGqE,QAAQ,CAAC,CAAC;UACnD,IAAIC,WAAW,GAAGpB,OAAO,CAACO,MAAM,EAAE;YAChC,MAAMc,MAAM,GAAGrB,OAAO,CAACoB,WAAW,CAAC;YACnC,oBACEzE,OAAA;cAEEmB,KAAK,EAAE;gBACLJ,QAAQ,EAAE,UAAU;gBACpBK,KAAK,EAAEnB,SAAS;gBAChBoB,MAAM,EAAEnB,UAAU;gBAClByB,OAAO,EAAE,MAAM;gBACfC,UAAU,EAAE,QAAQ;gBACpBC,cAAc,EAAE;cAClB,CAAE;cAAAgB,QAAA,eAEF7C,OAAA,CAACW,eAAe;gBAACC,IAAI,EAAE8D,MAAM,CAAC7D,IAAK;gBAACA,IAAI,EAAE6D,MAAM,CAAC7D;cAAK;gBAAAiC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC,GAVpDyB,MAAM,CAACZ,EAAE;cAAAhB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAWX,CAAC;UAEV;UACA,OAAO,IAAI,CAAC,CAAC;QACf,CAAC;MAAC,GAvBMsB,QAAQ;QAAAzB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAwBb,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAGNjD,OAAA;MAAKmB,KAAK,EAAE;QAAEQ,OAAO,EAAE,MAAM;QAAEE,cAAc,EAAE,QAAQ;QAAE8C,SAAS,EAAE;MAAO,CAAE;MAAA9B,QAAA,eAC3E7C,OAAA;QACE2C,OAAO,EAAEc,SAAU;QACnBtC,KAAK,EAAE;UACLyD,OAAO,EAAE,WAAW;UACpBnD,QAAQ,EAAE,MAAM;UAChBF,eAAe,EAAE,SAAS;UAC1BC,KAAK,EAAE,OAAO;UACdM,MAAM,EAAE,MAAM;UACdR,YAAY,EAAE,KAAK;UACnBS,MAAM,EAAE;QACV,CAAE;QAAAc,QAAA,EACH;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEd,CAAC;AAACG,GAAA,CAxEID,IAAI;AAAA0B,GAAA,GAAJ1B,IAAI;AA0EV,MAAM2B,IAAI,GAAGA,CAAA,KAAM;EACjB,oBAAO9E,OAAA,CAACmD,IAAI;IAAAL,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACjB,CAAC;AAAC8B,GAAA,GAFID,IAAI;AAIV,eAAeA,IAAI;AAAC,IAAA5B,EAAA,EAAA2B,GAAA,EAAAE,GAAA;AAAAC,YAAA,CAAA9B,EAAA;AAAA8B,YAAA,CAAAH,GAAA;AAAAG,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}